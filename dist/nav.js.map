{"version":3,"sources":["webpack:///./src/nav/nav/index.less?0d27","webpack:///./src/store/action-types.js","webpack:///./src/store/reducer/test.js","webpack:///./src/store/reducer/index.js","webpack:///./src/store/index.js","webpack:///./src/nav/nav/index.jsx","webpack:///./src/nav/root.component.js","webpack:///./src/nav/react.app.js","webpack:///./src/store/action/test.js","webpack:///./node_modules/_@babel_runtime@7.7.7@@babel/runtime/regenerator/index.js","webpack:///./node_modules/_regenerator-runtime@0.13.3@regenerator-runtime/runtime.js","webpack:///./node_modules/_@babel_runtime@7.7.7@@babel/runtime/helpers/asyncToGenerator.js"],"names":["module","exports","ADD_NUM","test","handleActions","Types","state","action","console","log","storeNum","reducer","combineReducers","createStore","applyMiddleware","reduxPromise","reduxThunk","reduxLogger","Nav","this","props","addNum","location","onClick","navigateToUrl","className","styles","tab","React","Component","compose","connect","dispatch","bindActionCreators","Root","store","reactLifecycles","singleSpaReact","ReactDOM","rootComponent","domElementGetter","el","document","getElementById","createElement","id","body","appendChild","bootstrap","mount","unmount","params","a","type","data","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","args","arguments","apply"],"mappings":"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","file":"nav.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"index_tab_Gi6pp\"};","export const ADD_NUM = \"ADD_NUM\" // 增加\r\n","import * as Types from \"../action-types\"\r\nimport { handleActions } from \"redux-actions\"\r\n\r\nlet initData = {\r\n    storeNum: 0\r\n}\r\n\r\nlet test = handleActions({\r\n    [Types.ADD_NUM]:(state,action)=>{\r\n        console.log(action)\r\n        return {...state, storeNum: state.storeNum + 1}\r\n    }\r\n},initData)\r\n\r\n\r\nexport default test\r\n","import {combineReducers} from 'redux';\r\nimport test from './test';\r\n\r\nlet reducer = combineReducers({\r\n    test\r\n});\r\nexport default reducer;\r\n","import {createStore,applyMiddleware} from 'redux';\r\nimport reducer from './reducer';\r\nimport reduxLogger from 'redux-logger';\r\nimport reduxThunk from 'redux-thunk';\r\nimport reduxPromise from 'redux-promise';\r\nexport default createStore(reducer,applyMiddleware(reduxPromise,reduxThunk,reduxLogger));\r\n\r\n","import React from \"react\"\r\nimport {BrowserRouter as Router} from 'react-router-dom'\r\nimport { navigateToUrl } from 'single-spa'\r\nimport styles from \"./index.less\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators, compose } from \"redux\"\r\nimport { addNum } from \"../../store/action/test.js\"\r\n\r\nclass Nav extends React.Component {\r\n\r\n    render () {\r\n        const { storeNum, addNum } = this.props\r\n        console.log(location)\r\n        return (\r\n            <Router>\r\n                <a onClick={() => navigateToUrl(\"/admin\")} className={styles.tab}>Admin Home</a>\r\n                <a onClick={() => navigateToUrl(\"/admin/test\")} className={styles.tab}>Admin Test</a>\r\n                <a onClick={() => navigateToUrl(\"/profile\")} className={styles.tab}>Community Home</a>\r\n                <a onClick={() => navigateToUrl(\"/profile/test\")} className={styles.tab}>Community Test</a>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    storeNum: state.test.storeNum\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    addNum: bindActionCreators(addNum, dispatch)\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )\r\n)(Nav)\r\n","import React from 'react'\r\nimport {render} from 'react-dom'\r\nimport Nav from \"./nav/index.jsx\"\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"../store\"\r\n\r\nexport default class Root extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Nav />\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport singleSpaReact from 'single-spa-react';\r\nimport Root from './root.component.js';\r\n\r\nfunction domElementGetter() {\r\n    let el = document.getElementById('nav')\r\n    if (!el) {\r\n        el = document.createElement('div')\r\n        el.id = 'nav'\r\n        document.body.appendChild(el)\r\n    }\r\n    return el\r\n}\r\n\r\nconst reactLifecycles = singleSpaReact({\r\n    React,\r\n    ReactDOM,\r\n    rootComponent: Root,\r\n    domElementGetter,\r\n})\r\n\r\nexport const bootstrap = [\r\n    reactLifecycles.bootstrap,\r\n];\r\n\r\nexport const mount = [\r\n    reactLifecycles.mount,\r\n];\r\n\r\nexport const unmount = [\r\n    reactLifecycles.unmount,\r\n];\r\n","import * as Types from \"../action-types\";\r\n\r\nconst addNum = (params)=>{\r\n    console.log(params)\r\n    return async (dispatch)=>{\r\n        await dispatch({type:Types.ADD_NUM, data: params })\r\n    }\r\n}\r\n\r\nexport { addNum }\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;"],"sourceRoot":""}